{
  "openapi": "3.0.0",
  "info": {
    "description": "sean",
    "version": "1.0.0",
    "title": "Seans-Python3-Flask-Rest-Boilerplate",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "tags": [
    {
      "name": "Storage Request",
      "description": "Example API for requesting and return book requests"
    }
  ],
  "paths": {
    "/storage": {
      "get": {
        "tags": [
          "Storage Request"
        ],
        "summary": "Returns storages",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/storage"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Storage Request"
        ],
        "summary": "Create a new srorage",
        "requestBody": {
          "description": "Storage Post Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/storage"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/storage/{id}": {
      "get": {
        "summary": "get a storage by ID",
        "tags": [
          "Storage Request"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Srorage id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/storage"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "put": {
        "summary": "edit a storage  by ID",
        "tags": [
          "Storage Request"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Srorage id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "requestBody": {
          "description": "Storage Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/storage"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/storage"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "delete": {
        "summary": "delete a storage  by ID",
        "tags": [
          "Storage Request"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Srorage id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "requestBody": {},
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/storage"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/storage/{id}/vehicles": {
      "get": {
        "summary": "get storage vehicles by ID",
        "tags": [
          "Storage Request"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Srorage id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "requestBody": {},
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/vehicles"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/task": {
      "get": {
        "tags": [
          "Task Request"
        ],
        "summary": "Returns Tasks",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/task"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Task Request"
        ],
        "summary": "Create a new task",
        "requestBody": {
          "description": "Task Post Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/task/{id}": {
      "put": {
        "summary": "edit a task by ID",
        "tags": [
          "Task Request"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Task id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "requestBody": {
          "description": "Task Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/task"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "delete": {
        "summary": "delete a task by ID",
        "tags": [
          "Task Request"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Task id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "requestBody": {},
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/task"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/routine": {
      "get": {
        "tags": [
          "Routine Request"
        ],
        "summary": "Returns routines",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/routines"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Routine Request"
        ],
        "summary": "Create a new routine",
        "requestBody": {
          "description": "Routien Post Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/routine_post"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/routine/{id}": {
      "get": {
        "tags": [
          "Routine Request"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "routine id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "summary": "Returns routines",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/routines"
            }
          }
        }
      },
      "put": {
        "summary": "edit a routine by ID",
        "tags": [
          "Routine Request"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "routine id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "requestBody": {
          "description": "Task Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/routine"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/storage"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "delete": {
        "summary": "delete a routine by ID",
        "tags": [
          "Routine Request"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Task id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "requestBody": {},
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/routine"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/jobs": {
      "get": {
        "tags": [
          "Job Request"
        ],
        "summary": "Returns storage jobs",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/job_log": {
      "post": {
        "tags": [
          "Job Request"
        ],
        "summary": "Create a log for a task by car ID ",
        "requestBody": {
          "description": "task_log Post Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tasks_log"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "User Request"
        ],
        "summary": "Returns users",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/routines"
            }
          }
        }
      },
      "post": {
        "tags": [
          "User Request"
        ],
        "summary": "Create a new user",
        "requestBody": {
          "description": "User Post Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/user/{id}": {
      "put": {
        "tags": [
          "User Request"
        ],
        "summary": "update a new user by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Srorage id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "requestBody": {
          "description": "User Put Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "delete": {
        "summary": "delete a user  by ID",
        "tags": [
          "User Request"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "User id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "requestBody": {},
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/user"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/login": {
      "get": {
        "tags": [
          "Login Request"
        ],
        "summary": "Returns users",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/token"
            }
          }
        }
      }
    },
    "/check-in": {
      "post": {
        "tags": [
          "Check-in Request"
        ],
        "summary": "Check-in a new car to storage",
        "requestBody": {
          "description": "Car Post Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vehicle"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "storage": {
        "properties": {
          "strg_id": {
            "type": "number",
            "format": "–"
          },
          "location": {
            "type": "string",
            "format": "string"
          },
          "name": {
            "type": "string",
            "format": "string"
          },
          "proponent": {
            "type": "string",
            "format": "string"
          },
          "contact": {
            "type": "string",
            "format": "string"
          },
          "capacity": {
            "type": "number",
            "format": "intger"
          }
        }
      },
      "id": {
        "properties": {
          "strg_id": {
            "type": "number"
          }
        }
      },
      "task_id": {
        "properties": {
          "task_id": {
            "type": "number"
          }
        }
      },
      "vehicles": {
        "type": "array",
        "properties": {
          "vehicle": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/vehicle"
            }
          }
        }
      },
      "vehicle": {
        "type": "object",
        "properties": {
          "car_id": {
            "type": "number",
            "format": "number"
          },
          "VIN": {
            "type": "number",
            "format": "number"
          },
          "model": {
            "type": "string",
            "format": "string"
          },
          "color": {
            "type": "string",
            "format": "string"
          },
          "arrival_date": {
            "type": "string",
            "format": "date"
          },
          "storage_location": {
            "type": "string",
            "format": "string"
          },
          "FL": {
            "type": "string",
            "format": "string"
          },
          "FR": {
            "type": "string",
            "format": "string"
          },
          "RR": {
            "type": "string",
            "format": "string"
          },
          "RL": {
            "type": "string",
            "format": "string"
          },
          "batt_green": {
            "type": "boolean"
          },
          "batt_voltage": {
            "type": "string",
            "format": "string"
          },
          "batt_model": {
            "type": "string",
            "format": "string"
          }
        }
      },
      "task": {
        "type": "object",
        "properties": {
          "task_id": {
            "type": "number",
            "format": "number"
          },
          "name": {
            "type": "string",
            "format": "string"
          },
          "type": {
            "type": "string",
            "format": "string"
          },
          "frequency": {
            "type": "number",
            "format": "intger"
          },
          "num_of_attrib": {
            "type": "number",
            "format": "intger",
            "example": 4
          },
          "attrib_names": {
            "type": "object",
            "example": {
              "attrib_name_1": "Front-Right",
              "attrib_name_2": "Front-Left",
              "attrib_name_3": "Rear-Right",
              "attrib_name_4": "Rear-Left"
            }
          },
          "req_image": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "tasks_log": {
        "type": "object",
        "properties": {
          "car_id": {
            "type": "number",
            "format": "number"
          },
          "rtn_id": {
            "type": "number",
            "format": "number"
          },
          "tasks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "task_id": {
                  "type": "number",
                  "format": "number"
                },
                "task_status": {
                  "type": "boolean",
                  "default": false
                },
                "task_value": {
                  "type": "string",
                  "format": "string"
                },
                "notes": {
                  "type": "string",
                  "format": "string"
                },
                "pictures": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "routine_post": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "format": "string"
        },
        "model": {
          "type": "string",
          "format": "string"
        },
        "tasks": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "routine": {
      "type": "object",
      "properties": {
        "rtn_id": {
          "type": "number",
          "format": "number"
        },
        "name": {
          "type": "string",
          "format": "string"
        },
        "model": {
          "type": "string",
          "format": "string"
        },
        "tasks": {
          "type": "array",
          "$ref": "#/components/schemas/task"
        }
      }
    },
    "routines": {
      "type": "array",
      "properties": {
        "routine": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/components/schemas/routine"
          }
        }
      }
    },
    "user": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "format": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string",
          "format": "string"
        },
        "strg_id": {
          "type": "number",
          "format": "intger"
        },
        "role": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "token": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "format": "string"
        }
      }
    }
  }
}